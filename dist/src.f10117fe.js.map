{"version":3,"sources":["src/glazeGL/core/Renderer.ts","src/glazeGL/core/Texture.ts","src/glazeGL/geom/Maths.ts","src/glazeGL/geom/AABB2.ts","src/glazeGL/geom/Vector2.ts","src/glazeGL/geom/Matrix3.ts","src/glazeGL/displaylist/DIsplayObject.ts","src/glazeGL/displaylist/DisplayObjectContainer.ts","src/glazeGL/displaylist/Camera.ts","src/glazeGL/displaylist/Sprite.ts","src/glazeGL/geom/Rectangle.ts","src/glazeGL/displaylist/SpriteTexture.ts","src/glazeGL/displaylist/Stage.ts","src/glazeGL/core/Buffer.ts","src/glazeGL/core/Geometry.ts","src/glazeGL/core/Program.ts","src/glazeGL/renderers/sprite/SpriteRenderer.ts","src/index.ts","node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","push","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","type","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","console","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","log","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","document","body","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","d","dep","Array","isArray","length","concat","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"src.f10117fe.js","sourceRoot":"..","sourcesContent":["import { Buffer } from \"./Buffer\";\n\nexport interface BlendFunc {\n    src?: number;\n    dst?: number;\n    srcAlpha?: number;\n    dstAlpha?: number;\n}\n\nexport interface BlendEquation {\n    modeRGB?: number;\n    modeAlpha?: number;\n}\n\nexport interface WebGLState {\n    blendFunc: BlendFunc;\n    blendEquation: BlendEquation;\n    depthMask: boolean;\n    depthFunc: number;\n    premultiplyAlpha: boolean;\n    flipY: boolean;\n    unpackAlignment: number;\n    framebuffer: any;\n    viewport: any;\n    textureUnits: Array<number>;\n    activeTextureUnit: number;\n    boundBuffer: Buffer;\n    uniformLocations: Map<any, any>;\n}\n\nconst webglState: WebGLState = {\n    blendFunc: { src: WebGLRenderingContext.ONE, dst: WebGLRenderingContext.ZERO },\n    blendEquation: { modeRGB: WebGLRenderingContext.FUNC_ADD },\n    depthMask: false,\n    depthFunc: WebGLRenderingContext.LESS,\n    premultiplyAlpha: false,\n    flipY: false,\n    unpackAlignment: 4,\n    framebuffer: null,\n    viewport: { width: null, height: null },\n    textureUnits: [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],\n    activeTextureUnit: 0,\n    boundBuffer: null,\n    uniformLocations: new Map(),\n};\n\nexport class Renderer {\n    canvas: HTMLCanvasElement;\n    gl: WebGLRenderingContext;\n    premultipliedAlpha: boolean;\n    currentProgram: number;\n\n    width: number;\n    height: number;\n    dpr: number;\n\n    isWebgl2: boolean;\n\n    color: boolean;\n    depth: boolean;\n    stencil: boolean;\n    autoClear: boolean;\n\n    state: WebGLState;\n    currentGeometry: any;\n\n    extensions: any;\n\n    constructor({\n        canvas = document.createElement(\"canvas\"),\n        width = 300,\n        height = 150,\n        dpr = 1,\n        alpha = false,\n        depth = false,\n        stencil = false,\n        antialias = false,\n        premultipliedAlpha = false,\n        preserveDrawingBuffer = false,\n        autoClear = true,\n        webgl = 2,\n    } = {}) {\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this.dpr = dpr;\n        this.color = true;\n        this.depth = depth;\n        this.stencil = stencil;\n        this.autoClear = autoClear;\n        this.isWebgl2 = false;\n\n        this.state = webglState;\n\n        const attributes: WebGLContextAttributes = {\n            alpha,\n            depth,\n            stencil,\n            antialias,\n            premultipliedAlpha,\n            preserveDrawingBuffer,\n        };\n\n        this.gl = canvas.getContext(\"webgl\", attributes);\n        this.setSize(width, height);\n\n        this.extensions = {};\n\n        this.vertexAttribDivisor = this.getExtension(\n            \"ANGLE_instanced_arrays\",\n            \"vertexAttribDivisor\",\n            \"vertexAttribDivisorANGLE\"\n        );\n        this.drawArraysInstanced = this.getExtension(\n            \"ANGLE_instanced_arrays\",\n            \"drawArraysInstanced\",\n            \"drawArraysInstancedANGLE\"\n        );\n        this.drawElementsInstanced = this.getExtension(\n            \"ANGLE_instanced_arrays\",\n            \"drawElementsInstanced\",\n            \"drawElementsInstancedANGLE\"\n        );\n        this.createVertexArray = this.getExtension(\n            \"OES_vertex_array_object\",\n            \"createVertexArray\",\n            \"createVertexArrayOES\"\n        );\n        this.bindVertexArray = this.getExtension(\"OES_vertex_array_object\", \"bindVertexArray\", \"bindVertexArrayOES\");\n        this.deleteVertexArray = this.getExtension(\n            \"OES_vertex_array_object\",\n            \"deleteVertexArray\",\n            \"deleteVertexArrayOES\"\n        );\n        this.drawBuffers = this.getExtension(\"WEBGL_draw_buffers\", \"drawBuffers\", \"drawBuffersWEBGL\");\n    }\n\n    enable(id: number) {\n        if (this.state[id] === true) return;\n        this.gl.enable(id);\n        this.state[id] = true;\n    }\n    disable(id: number) {\n        if (this.state[id] === false) return;\n        this.gl.disable(id);\n        this.state[id] = false;\n    }\n    setBlendEquation(modeRGB: number = this.gl.FUNC_ADD, modeAlpha: number) {\n        if (this.state.blendEquation.modeRGB === modeRGB && this.state.blendEquation.modeAlpha === modeAlpha) {\n            return;\n        }\n        this.state.blendEquation.modeRGB = modeRGB;\n        this.state.blendEquation.modeAlpha = modeAlpha;\n        if (modeAlpha !== undefined) {\n            this.gl.blendEquationSeparate(modeRGB, modeAlpha);\n        } else {\n            this.gl.blendEquation(modeRGB);\n        }\n    }\n\n    setBlendFunc(src: number, dst: number, srcAlpha: number, dstAlpha: number) {\n        if (\n            this.state.blendFunc.src === src &&\n            this.state.blendFunc.dst === dst &&\n            this.state.blendFunc.srcAlpha === srcAlpha &&\n            this.state.blendFunc.dstAlpha === dstAlpha\n        ) {\n            return;\n        }\n        this.state.blendFunc.src = src;\n        this.state.blendFunc.dst = dst;\n        this.state.blendFunc.srcAlpha = srcAlpha;\n        this.state.blendFunc.dstAlpha = dstAlpha;\n        if (srcAlpha !== undefined) {\n            this.gl.blendFuncSeparate(src, dst, srcAlpha, dstAlpha);\n        } else {\n            debugger;\n            this.gl.blendFunc(src, dst);\n        }\n    }\n\n    setDepthFunc(value: number) {\n        if (this.state.depthFunc === value) {\n            return;\n        }\n        this.state.depthFunc = value;\n        this.gl.depthFunc(value);\n    }\n\n    setDepthMask(value: boolean) {\n        if (this.state.depthMask === value) {\n            return;\n        }\n        this.state.depthMask = value;\n        this.gl.depthMask(value);\n    }\n\n    setSize(width, height) {\n        this.width = width;\n        this.height = height;\n\n        this.gl.canvas.width = width * this.dpr;\n        this.gl.canvas.height = height * this.dpr;\n\n        Object.assign(this.gl.canvas[\"style\"], {\n            width: width + \"px\",\n            height: height + \"px\",\n        });\n    }\n\n    setViewport(width, height) {\n        if (this.state.viewport.width === width && this.state.viewport.height === height) {\n            return;\n        }\n        this.state.viewport.width = width;\n        this.state.viewport.height = height;\n        this.gl.viewport(0, 0, width, height);\n    }\n\n    bindFramebuffer(target = this.gl.FRAMEBUFFER, frameBuffer = null) {\n        if (this.state.framebuffer === frameBuffer) {\n            return;\n        }\n        this.state.framebuffer = frameBuffer;\n        this.gl.bindFramebuffer(target, frameBuffer);\n    }\n\n    activeTexture(value: number) {\n        if (this.state.activeTextureUnit === value) return;\n        this.state.activeTextureUnit = value;\n        this.gl.activeTexture(this.gl.TEXTURE0 + value);\n    }\n\n    getExtension(extension: string, webgl2Func?: string, extFunc?: string) {\n        // if webgl2 function supported, return func bound to gl context\n        if (webgl2Func && this.gl[webgl2Func]) return this.gl[webgl2Func].bind(this.gl);\n\n        // fetch extension once only\n        if (!this.extensions[extension]) {\n            this.extensions[extension] = this.gl.getExtension(extension);\n        }\n\n        // return extension if no function requested\n        if (!webgl2Func) return this.extensions[extension];\n\n        // Return null if extension not supported\n        if (!this.extensions[extension]) return null;\n\n        // return extension function, bound to extension\n        return this.extensions[extension][extFunc].bind(this.extensions[extension]);\n    }\n\n    vertexAttribDivisor(arg0: any, divisor: any) {\n        throw new Error(\"Method not implemented.\");\n    }\n    createVertexArray(): any {\n        throw new Error(\"Method not implemented.\");\n    }\n    deleteVertexArray(vao: any) {\n        throw new Error(\"Method not implemented.\");\n    }\n    bindVertexArray(arg0: null) {\n        throw new Error(\"Method not implemented.\");\n    }\n    drawArraysInstanced(mode: number, start: any, count: any, instancedCount: number) {\n        throw new Error(\"Method not implemented.\");\n    }\n    drawElementsInstanced(mode: number, count: any, type: any, arg3: number, instancedCount: number) {\n        throw new Error(\"Method not implemented.\");\n    }\n    drawBuffers(buffers: number[]) {\n        throw new Error(\"Method not implemented.\");\n    }\n\n    render({ renderable, target = null, clear = true }) {\n        if (target === null) {\n            // make sure no render target bound so draws to canvas\n            this.bindFramebuffer();\n            this.setViewport(this.width * this.dpr, this.height * this.dpr);\n        } else {\n            // bind supplied render target and update viewport\n            this.bindFramebuffer(target);\n            this.setViewport(target.width, target.height);\n        }\n\n        if (clear || (this.autoClear && clear !== false)) {\n            // Ensure depth buffer writing is enabled so it can be cleared\n            if (this.depth && (!target || target.depth)) {\n                this.enable(this.gl.DEPTH_TEST);\n                this.setDepthMask(true);\n            }\n            this.gl.clear(\n                (this.color ? this.gl.COLOR_BUFFER_BIT : 0) |\n                    (this.depth ? this.gl.DEPTH_BUFFER_BIT : 0) |\n                    (this.stencil ? this.gl.STENCIL_BUFFER_BIT : 0)\n            );\n        }\n        /*\n        // updates all scene graph matrices\n        if (update) scene.updateMatrixWorld();\n\n        // Update camera separately, in case not in scene graph\n        if (camera) camera.updateMatrixWorld();\n\n        // Get render list - entails culling and sorting\n        const renderList = this.getRenderList({ scene, camera, frustumCull, sort });\n\n        renderList.forEach((node) => {\n            node.draw({ camera });\n        });\n*/\n        renderable.draw();\n    }\n}\n","// TODO: delete texture\n// TODO: use texSubImage2D for updates (video or when loaded)\n// TODO: need? encoding = linearEncoding\n// TODO: support non-compressed mipmaps uploads\n\nimport { Renderer } from \"./Renderer.js\";\n\nconst emptyPixel = new Uint8Array(4);\n\nfunction isPowerOf2(value: number) {\n    return (value & (value - 1)) === 0;\n}\n\nlet ID = 1;\n\n// interface TextureParamters {\n//     image,\n//     target = WebGLRenderingContext.TEXTURE_2D,\n//     type = WebGLRenderingContext.UNSIGNED_BYTE,\n//     format = WebGLRenderingContext.RGBA,\n//     internalFormat = format,\n//     wrapS = WebGLRenderingContext.CLAMP_TO_EDGE,\n//     wrapT = WebGLRenderingContext.CLAMP_TO_EDGE,\n//     generateMipmaps = true,\n//     minFilter = generateMipmaps ? WebGLRenderingContext.NEAREST_MIPMAP_LINEAR : WebGLRenderingContext.LINEAR,\n//     magFilter = WebGLRenderingContext.LINEAR,\n//     premultiplyAlpha = false,\n//     unpackAlignment = 4,\n//     flipY = target == WebGLRenderingContext.TEXTURE_2D ? true : false,\n//     level = 0,\n//     width, // used for RenderTargets or Data Textures\n//     height = width,\n// }\n\nexport class Texture {\n    renderer: Renderer;\n    gl: WebGLRenderingContext;\n    id: number;\n    needsUpdate: boolean;\n    onUpdate: any;\n\n    image: HTMLImageElement;\n    target: number;\n    type: number;\n    format: number;\n    internalFormat: number;\n    minFilter: number;\n    magFilter: number;\n    wrapS: number;\n    wrapT: number;\n    generateMipmaps: boolean;\n    premultiplyAlpha: boolean;\n    unpackAlignment: number;\n    flipY: boolean;\n    level: number;\n    width: number;\n    height: number;\n    texture: WebGLTexture;\n\n    state: any;\n\n    store = {\n        image: null,\n    };\n\n    constructor(\n        renderer: Renderer,\n        {\n            image = undefined,\n            target = WebGLRenderingContext.TEXTURE_2D,\n            type = WebGLRenderingContext.UNSIGNED_BYTE,\n            format = WebGLRenderingContext.RGBA,\n            internalFormat = format,\n            wrapS = WebGLRenderingContext.CLAMP_TO_EDGE,\n            wrapT = WebGLRenderingContext.CLAMP_TO_EDGE,\n            generateMipmaps = true,\n            minFilter = generateMipmaps ? WebGLRenderingContext.NEAREST_MIPMAP_LINEAR : WebGLRenderingContext.LINEAR,\n            magFilter = WebGLRenderingContext.LINEAR,\n            premultiplyAlpha = false,\n            unpackAlignment = 4,\n            flipY = target == WebGLRenderingContext.TEXTURE_2D ? true : false,\n            level = 0,\n            width = 0, // used for RenderTargets or Data Textures\n            height = width,\n        } = {}\n    ) {\n        this.renderer = renderer;\n        this.gl = this.renderer.gl;\n        this.id = ID++;\n\n        this.image = image;\n        this.target = target;\n        this.type = type;\n        this.format = format;\n        this.internalFormat = internalFormat;\n        this.minFilter = minFilter;\n        this.magFilter = magFilter;\n        this.wrapS = wrapS;\n        this.wrapT = wrapT;\n        this.generateMipmaps = generateMipmaps;\n        this.premultiplyAlpha = premultiplyAlpha;\n        this.unpackAlignment = unpackAlignment;\n        this.flipY = flipY;\n        this.level = level;\n        this.width = width;\n        this.height = height;\n        this.texture = this.gl.createTexture();\n\n        this.store = {\n            image: null,\n        };\n\n        this.state = {\n            minFilter: this.gl.NEAREST_MIPMAP_LINEAR,\n            magFilter: this.gl.LINEAR,\n            wrapS: this.gl.REPEAT,\n            wrapT: this.gl.REPEAT,\n            anisotropy: 0,\n        };\n    }\n\n    bind() {\n        // Already bound to active texture unit\n        if (this.renderer.state.textureUnits[this.renderer.state.activeTextureUnit] === this.id) {\n            return;\n        }\n        this.gl.bindTexture(this.target, this.texture);\n        this.renderer.state.textureUnits[this.renderer.state.activeTextureUnit] = this.id;\n    }\n\n    update(textureUnit = 0) {\n        const needsUpdate = !(this.image === this.store.image && !this.needsUpdate);\n\n        // Make sure that texture is bound to its texture unit\n        if (needsUpdate || this.renderer.state.textureUnits[textureUnit] !== this.id) {\n            // set active texture unit to perform texture functions\n            this.renderer.activeTexture(textureUnit);\n            this.bind();\n        }\n\n        if (!needsUpdate) {\n            return;\n        }\n        this.needsUpdate = false;\n\n        if (this.flipY !== this.renderer.state.flipY) {\n            this.gl.pixelStorei(this.gl.UNPACK_FLIP_Y_WEBGL, this.flipY);\n            this.renderer.state.flipY = this.flipY;\n        }\n\n        if (this.premultiplyAlpha !== this.renderer.state.premultiplyAlpha) {\n            this.gl.pixelStorei(this.gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, this.premultiplyAlpha);\n            this.renderer.state.premultiplyAlpha = this.premultiplyAlpha;\n        }\n\n        if (this.unpackAlignment !== this.renderer.state.unpackAlignment) {\n            this.gl.pixelStorei(this.gl.UNPACK_ALIGNMENT, this.unpackAlignment);\n            this.renderer.state.unpackAlignment = this.unpackAlignment;\n        }\n\n        if (this.minFilter !== this.state.minFilter) {\n            this.gl.texParameteri(this.target, this.gl.TEXTURE_MIN_FILTER, this.minFilter);\n            this.state.minFilter = this.minFilter;\n        }\n\n        if (this.magFilter !== this.state.magFilter) {\n            this.gl.texParameteri(this.target, this.gl.TEXTURE_MAG_FILTER, this.magFilter);\n            this.state.magFilter = this.magFilter;\n        }\n\n        if (this.wrapS !== this.state.wrapS) {\n            this.gl.texParameteri(this.target, this.gl.TEXTURE_WRAP_S, this.wrapS);\n            this.state.wrapS = this.wrapS;\n        }\n\n        if (this.wrapT !== this.state.wrapT) {\n            this.gl.texParameteri(this.target, this.gl.TEXTURE_WRAP_T, this.wrapT);\n            this.state.wrapT = this.wrapT;\n        }\n\n        if (this.image) {\n            if (this.image.width) {\n                this.width = this.image.width;\n                this.height = this.image.height;\n            }\n\n            if (ArrayBuffer.isView(this.image)) {\n                // Data texture\n                this.gl.texImage2D(\n                    this.target,\n                    this.level,\n                    this.internalFormat,\n                    this.width,\n                    this.height,\n                    0,\n                    this.format,\n                    this.type,\n                    this.image\n                );\n            } else {\n                // Regular texture\n                this.gl.texImage2D(this.target, this.level, this.internalFormat, this.format, this.type, this.image);\n            }\n\n            if (this.generateMipmaps) {\n                // For WebGL1, if not a power of 2, turn off mips, set wrapping to clamp to edge and minFilter to linear\n                if (!isPowerOf2(this.image.width) || !isPowerOf2(this.image.height)) {\n                    this.generateMipmaps = false;\n                    this.wrapS = this.wrapT = this.gl.CLAMP_TO_EDGE;\n                    this.minFilter = this.gl.LINEAR;\n                } else {\n                    this.gl.generateMipmap(this.target);\n                }\n            }\n\n            // Callback for when data is pushed to GPU\n            this.onUpdate && this.onUpdate();\n        } else {\n            if (this.width) {\n                // image intentionally left null for RenderTarget\n                this.gl.texImage2D(\n                    this.target,\n                    this.level,\n                    this.internalFormat,\n                    this.width,\n                    this.height,\n                    0,\n                    this.format,\n                    this.type,\n                    null\n                );\n            } else {\n                // Upload empty pixel if no image to avoid errors while image or video loading\n                this.gl.texImage2D(\n                    this.target,\n                    0,\n                    this.gl.RGBA,\n                    1,\n                    1,\n                    0,\n                    this.gl.RGBA,\n                    this.gl.UNSIGNED_BYTE,\n                    emptyPixel\n                );\n            }\n        }\n        this.store.image = this.image;\n    }\n}\n","import { Vector2 } from \"./Vector2\";\n\nexport const ZERO_TOLERANCE = 1e-8;\n\nexport const RAD_DEG = 180 / Math.PI;\n\nexport const DEG_RAD = Math.PI / 180;\n\nexport const LN2 = 0.6931471805599453;\n\nexport const LN10 = 2.302585092994046;\n\nexport const PIHALF = 1.5707963267948966;\n\nexport const PI = 3.141592653589793;\n\nexport const PI2 = 6.283185307179586;\n\nexport const EPS = 1e-6;\n\nexport const SQRT2 = 1.414213562373095;\n\nexport const MAXINT = Math.pow(2, 31) - 1;\nexport const MININT = -MAXINT;\n\nexport function toRad(deg: number): number {\n    return deg * DEG_RAD;\n}\n\nexport function toDeg(rad: number): number {\n    return rad * RAD_DEG;\n}\n\nexport function Clamp(value: number, min: number, max: number): number {\n    return Math.min(Math.max(value, min), max);\n}\n\nexport function ScaleRectangleWithRatio(containerRect: Vector2, itemRect: Vector2): number {\n    //var sX = itemRect.x / containerRect.x;\n    //var sY = itemRect.y / containerRect.y;\n\n    var sX = containerRect.x / itemRect.x;\n    var sY = containerRect.y / itemRect.y;\n\n    var rD = containerRect.x / containerRect.y;\n    var rR = itemRect.x / itemRect.y;\n\n    return rD < rR ? sX : sY;\n}\n","import { AABB } from \"./AABB\";\nimport { MAXINT, MININT } from \"./Maths\";\nimport { Vector2 } from \"./Vector2\";\n\nexport class AABB2 {\n    public l: number = MAXINT;\n    public t: number = MAXINT;\n    public r: number = MININT;\n    public b: number = MININT;\n\n    constructor(t = 0.0, r = 0.0, b = 0.0, l = 0.0) {\n        this.t = t;\n        this.r = r;\n        this.b = b;\n        this.l = l;\n    }\n\n    setToSweeptAABB(aabb: AABB, preditcedPosition: Vector2) {\n        this.l = aabb.position.x - aabb.extents.x;\n        this.r = aabb.position.x + aabb.extents.x;\n        this.t = aabb.position.y - aabb.extents.y;\n        this.b = aabb.position.y + aabb.extents.y;\n    }\n\n    fromAABB(aabb: AABB) {}\n\n    clone(): AABB2 {\n        return new AABB2(this.t, this.r, this.b, this.l);\n    }\n\n    reset() {\n        this.t = this.l = MAXINT;\n        this.r = this.b = MININT;\n    }\n\n    get width(): number {\n        return this.r - this.l;\n    }\n\n    get height(): number {\n        return this.b - this.t;\n    }\n    // if (this.l > aabb.r) return false;\n    // else if (this.r < aabb.l) return false;\n    // else if (this.t > aabb.b) return false;\n    // else if (this.b < aabb.t) return false;\n    // else return true;\n    intersect(aabb: AABB2): boolean {\n        return this.l <= aabb.r && this.r > aabb.l && this.t <= aabb.b && this.b >= aabb.t;\n    }\n\n    addAABB(aabb: AABB2) {\n        if (aabb.t < this.t) this.t = aabb.t;\n        if (aabb.r > this.r) this.r = aabb.r;\n        if (aabb.b > this.b) this.b = aabb.b;\n        if (aabb.l < this.l) this.l = aabb.l;\n    }\n\n    combine(aabb: AABB2): AABB2 {\n        const result = this.clone();\n        result.addAABB(aabb);\n        return result;\n    }\n\n    combine2(a: AABB2, b: AABB2): AABB2 {\n        this.t = Math.min(a.t, b.t);\n        this.r = Math.max(a.r, b.r);\n        this.b = Math.max(a.b, b.b);\n        this.l = Math.min(a.l, b.l);\n        return this;\n    }\n\n    addPoint(x: number, y: number) {\n        if (x < this.l) this.l = x;\n        if (x > this.r) this.r = x;\n        if (y < this.t) this.t = y;\n        if (y > this.b) this.b = y;\n    }\n\n    fitPoint(point: Vector2) {\n        if (point.x < this.l) point.x = this.l;\n        if (point.x > this.r) point.x = this.r;\n        if (point.y < this.t) point.y = this.t;\n        if (point.y > this.b) point.y = this.b;\n    }\n\n    expand(i: number) {\n        this.l -= i;\n        this.r += i;\n        this.t -= i;\n        this.b += i;\n    }\n\n    expand2(width: number, height: number) {\n        this.l += width / 2;\n        this.r -= width / 2;\n        this.t += height / 2;\n        this.b -= height / 2;\n    }\n\n    contains(aabb: AABB2): boolean {\n        if (this.l <= aabb.l && this.t <= aabb.t && aabb.b < this.b && aabb.r < this.r) {\n            return true;\n        }\n        return false;\n    }\n\n    copy(aabb: AABB2) {\n        this.l = aabb.l;\n        this.r = aabb.r;\n        this.t = aabb.t;\n        this.b = aabb.b;\n    }\n\n    copyAABB(aabb: AABB) {\n        this.l = aabb.l;\n        this.r = aabb.r;\n        this.t = aabb.t;\n        this.b = aabb.b;\n    }\n\n    transform(displacement: Vector2) {\n        this.l += displacement.x;\n        this.r += displacement.x;\n        this.t += displacement.y;\n        this.b += displacement.y;\n    }\n\n    perimeter(): number {\n        return 2 * (this.width + this.height);\n    }\n}\n","export class Vector2 {\n    static ZERO_TOLERANCE = 1e-8;\n\n    public x: number;\n    public y: number;\n\n    constructor(x: number = 0.0, y: number = 0.0) {\n        this.x = x;\n        this.y = y;\n    }\n\n    setTo(x: number, y: number) {\n        this.x = x;\n        this.y = y;\n    }\n\n    copy(v: Vector2) {\n        this.x = v.x;\n        this.y = v.y;\n    }\n\n    clone(): Vector2 {\n        return new Vector2(this.x, this.y);\n    }\n\n    normalize(): number {\n        var t = Math.sqrt(this.x * this.x + this.y * this.y) + Vector2.ZERO_TOLERANCE;\n        this.x /= t;\n        this.y /= t;\n        return t;\n    }\n\n    length(): number {\n        return Math.sqrt(this.x * this.x + this.y * this.y);\n    }\n\n    lengthSqrd(): number {\n        return this.x * this.x + this.y * this.y;\n    }\n\n    clampScalar(max: number) {\n        var l = this.length();\n        if (l > max) {\n            this.multEquals(max / l);\n        }\n    }\n\n    clampVector(v: Vector2) {\n        this.x = Math.min(Math.max(this.x, -v.x), v.x);\n        this.y = Math.min(Math.max(this.y, -v.y), v.y);\n    }\n\n    plusEquals(v: Vector2) {\n        this.x += v.x;\n        this.y += v.y;\n    }\n\n    minusEquals(v: Vector2) {\n        this.x -= v.x;\n        this.y -= v.y;\n    }\n\n    multEquals(s: number) {\n        this.x *= s;\n        this.y *= s;\n    }\n\n    plusMultEquals(v: Vector2, s: number) {\n        this.x += v.x * s;\n        this.y += v.y * s;\n    }\n\n    minusMultEquals(v: Vector2, s: number) {\n        this.x -= v.x * s;\n        this.y -= v.y * s;\n    }\n\n    dot(v: Vector2): number {\n        return this.x * v.x + this.y * v.y;\n    }\n\n    cross(v: Vector2): number {\n        return this.x * v.y - this.y * v.x;\n    }\n\n    leftHandNormal(): Vector2 {\n        return new Vector2(this.y, -this.x);\n    }\n\n    leftHandNormalEquals() {\n        var t = this.x;\n        this.x = this.y;\n        this.y = -t;\n    }\n\n    rightHandNormal(): Vector2 {\n        return new Vector2(-this.y, this.x);\n    }\n\n    rightHandNormalEquals() {\n        var t = this.x;\n        this.x = -this.y;\n        this.y = t;\n    }\n\n    reflectEquals(normal: Vector2) {\n        var d = this.dot(normal);\n        this.x -= 2 * d * normal.x;\n        this.y -= 2 * d * normal.y;\n    }\n\n    interpolate(v1: Vector2, v2: Vector2, t: number) {\n        this.copy(v1);\n        this.multEquals(1 - t);\n        this.plusMultEquals(v2, t);\n        // return v1.mult(1 - t).plus(v2.mult(t));\n    }\n\n    setAngle(angle: number) {\n        var len = this.length();\n        this.x = Math.cos(angle) * len;\n        this.y = Math.sin(angle) * len;\n    }\n\n    rotateEquals(angle: number) {\n        var a: number = angle * (Math.PI / 180);\n        var cos: number = Math.cos(a);\n        var sin: number = Math.sin(a);\n        this.x = cos * this.x - sin * this.y;\n        this.y = cos * this.y + sin * this.x;\n    }\n\n    setUnitRotation(angle: number) {\n        var a: number = angle * (Math.PI / 180);\n        this.x = Math.cos(a);\n        this.y = Math.sin(a);\n    }\n\n    heading(): number {\n        return Math.atan2(this.y, this.x);\n    }\n\n    distSqrd(v: Vector2): number {\n        var dX = this.x - v.x;\n        var dY = this.y - v.y;\n        return dX * dX + dY * dY;\n    }\n\n    roundDown(closest: number): Vector2 {\n        this.x = Math.floor(this.x / closest) * closest;\n        this.y = Math.floor(this.y / closest) * closest;\n        return this;\n    }\n}\n","export function CreateMat3(): Float32Array {\n    return Identity(new Float32Array(9));\n}\n\nexport function Identity(matrix: Float32Array): Float32Array {\n    matrix[0] = 1;\n    matrix[1] = 0;\n    matrix[2] = 0;\n    matrix[3] = 0;\n    matrix[4] = 1;\n    matrix[5] = 0;\n    matrix[6] = 0;\n    matrix[7] = 0;\n    matrix[8] = 1;\n    return matrix;\n}\n\nexport function Multiply(mat: Float32Array, mat2: Float32Array, dest: Float32Array): Float32Array {\n    if (dest != null) dest = mat;\n\n    var a00 = mat[0],\n        a01 = mat[1],\n        a02 = mat[2],\n        a10 = mat[3],\n        a11 = mat[4],\n        a12 = mat[5],\n        a20 = mat[6],\n        a21 = mat[7],\n        a22 = mat[8],\n        b00 = mat2[0],\n        b01 = mat2[1],\n        b02 = mat2[2],\n        b10 = mat2[3],\n        b11 = mat2[4],\n        b12 = mat2[5],\n        b20 = mat2[6],\n        b21 = mat2[7],\n        b22 = mat2[8];\n\n    dest[0] = b00 * a00 + b01 * a10 + b02 * a20;\n    dest[1] = b00 * a01 + b01 * a11 + b02 * a21;\n    dest[2] = b00 * a02 + b01 * a12 + b02 * a22;\n\n    dest[3] = b10 * a00 + b11 * a10 + b12 * a20;\n    dest[4] = b10 * a01 + b11 * a11 + b12 * a21;\n    dest[5] = b10 * a02 + b11 * a12 + b12 * a22;\n\n    dest[6] = b20 * a00 + b21 * a10 + b22 * a20;\n    dest[7] = b20 * a01 + b21 * a11 + b22 * a21;\n    dest[8] = b20 * a02 + b21 * a12 + b22 * a22;\n\n    return dest;\n}\n\nexport function Clone(mat: Float32Array): Float32Array {\n    var matrix = new Float32Array(9);\n    matrix[0] = mat[0];\n    matrix[1] = mat[1];\n    matrix[2] = mat[2];\n    matrix[3] = mat[3];\n    matrix[4] = mat[4];\n    matrix[5] = mat[5];\n    matrix[6] = mat[6];\n    matrix[7] = mat[7];\n    matrix[8] = mat[8];\n\n    return matrix;\n}\n\nexport function Transpose(mat: Float32Array, dest: Float32Array): Float32Array {\n    if (dest != null || mat == dest) {\n        var a01 = mat[1],\n            a02 = mat[2],\n            a12 = mat[5];\n        mat[1] = mat[3];\n        mat[2] = mat[6];\n        mat[3] = a01;\n        mat[5] = mat[7];\n        mat[6] = a02;\n        mat[7] = a12;\n        return mat;\n    }\n    dest[0] = mat[0];\n    dest[1] = mat[3];\n    dest[2] = mat[6];\n    dest[3] = mat[1];\n    dest[4] = mat[4];\n    dest[5] = mat[7];\n    dest[6] = mat[2];\n    dest[7] = mat[5];\n    dest[8] = mat[8];\n\n    return dest;\n}\n","import { CreateMat3 } from \"../geom/Matrix3\";\nimport { Vector2 } from \"../geom/Vector2\";\nimport { DisplayObjectContainer } from \"./DisplayObjectContainer\";\n\nexport class DisplayObject {\n\n    public id: string;\n\n    public position: Vector2;\n    public scale: Vector2;\n    public pivot: Vector2;\n    \n    public visible: boolean;\n    public renderable: boolean;\n    \n    public alpha: number;\n    public worldAlpha: number;\n    \n    public worldTransform: Float32Array;\n    public localTransform: Float32Array;\n    \n    public parent: DisplayObjectContainer;\n    public prev: DisplayObject;\n    public next: DisplayObject;\n    \n    protected _rotation: number;\n    protected _rotationComponents: Vector2;\n\n    constructor() {\n        this.position = new Vector2();\n        this.scale = new Vector2(1, 1);\n        this.pivot = new Vector2();\n        this.alpha = 1;\n        this.visible = true;\n        this.renderable = false;\n        this.parent = null;\n        this.worldTransform = CreateMat3();\n        this.localTransform = CreateMat3();\n        this._rotationComponents = new Vector2();\n        this.rotation = 0;\n    }\n\n    get rotation(): number {\n        return this._rotation;\n    }\n\n    set rotation(v: number) {\n        this._rotation = v;\n        this._rotationComponents.x = Math.cos(this._rotation);\n        this._rotationComponents.y = Math.sin(this._rotation);\n    }\n\n    public RoundFunction(v: number): number {\n        return v;\n    }\n\n    public updateTransform() {}\n\n    public calcExtents() {}\n}\n","import { DisplayObject } from \"./DIsplayObject\";\n\nexport class DisplayObjectContainer extends DisplayObject {\n    public children :  DisplayObject[]\n    constructor() {\n        super();\n        this.children = [];\n    }\n\n    public addChild(child: DisplayObject) {\n        this.children.push(child)\n        this.childAdded(child);\n    }\n\n    public addChildAt(child: DisplayObject, index: number) {\n        this.children.splice(index, 0, child);\n        this.childAdded(child);\n    }\n\n    public findChildByIndex(index: number): DisplayObject {\n        return this.children[index];\n    }\n\n    public removeChild(child: DisplayObject) {\n        this.children.splice(this.children.indexOf(child), 1);\n    }\n\n    public removeChildAt(index: number) {\n        this.children.splice(index, 1);\n    }\n\n    public updateTransform() {\n        // super.updateTransform();\n\n        const positionx: number = Math.floor(this.position.x);\n        const positiony: number = Math.floor(this.position.y);\n\n        const sinR = this._rotationComponents.y;\n        const cosR = this._rotationComponents.x;\n\n        this.localTransform[0] = cosR * this.scale.x;\n        this.localTransform[1] = -sinR * this.scale.y;\n        this.localTransform[3] = sinR * this.scale.x;\n        this.localTransform[4] = cosR * this.scale.y;\n\n        const parentTransform = this.parent.worldTransform;\n\n        const a00 = this.localTransform[0];\n        const a01 = this.localTransform[1];\n        const a02 = positionx - (this.localTransform[0] * this.pivot.x - this.pivot.y * this.localTransform[1]);\n        const a10 = this.localTransform[3];\n        const a11 = this.localTransform[4];\n        const a12 = positiony - (this.localTransform[4] * this.pivot.y - this.pivot.x * this.localTransform[3]);\n        const b00 = parentTransform[0];\n        const b01 = parentTransform[1];\n        const b02 = parentTransform[2];\n        const b10 = parentTransform[3];\n        const b11 = parentTransform[4];\n        const b12 = parentTransform[5];\n\n        this.localTransform[2] = a02;\n        this.localTransform[5] = a12;\n\n        this.worldTransform[0] = b00 * a00 + b01 * a10;\n        this.worldTransform[1] = b00 * a01 + b01 * a11;\n        this.worldTransform[2] = b00 * a02 + b01 * a12 + b02;\n\n        this.worldTransform[3] = b10 * a00 + b11 * a10;\n        this.worldTransform[4] = b10 * a01 + b11 * a11;\n        this.worldTransform[5] = b10 * a02 + b11 * a12 + b12;\n\n        this.worldAlpha = this.alpha * this.parent.worldAlpha;\n\n        // this.calcExtents();\n\n        for (const child of this.children) { \n            child.updateTransform();\n        }       \n    }\n\n    public iterate(cb:any) {\n        for (const child of this.children) { \n            cb(child);\n        }     \n    }\n\n    protected childAdded(child: DisplayObject) {\n        child.parent = this;\n    }\n\n    protected childRemoved(child: DisplayObject) {\n        child.parent = null;\n    }\n}\n","import { AABB2 } from \"../geom/AABB2\";\nimport { Vector2 } from \"../geom/Vector2\";\nimport { DisplayObjectContainer } from \"./DisplayObjectContainer\";\n\nconst CAMERA_TRACKING_SPEED = 0.1;\nexport class Camera extends DisplayObjectContainer {\n    public realPosition: Vector2;\n    public viewportSize: Vector2;\n    public halfViewportSize: Vector2;\n    public viewPortAABB: AABB2;\n    public worldExtentsAABB: AABB2;\n    public shake: Vector2;\n    \n    private cameraExtentsAABB: AABB2;\n    \n    constructor() {\n        super();\n        this.id = \"Camera\";\n        this.realPosition = new Vector2();\n        this.viewportSize = new Vector2();\n        this.halfViewportSize = new Vector2();\n        this.shake = new Vector2();\n        this.viewPortAABB = new AABB2();\n        this.worldExtentsAABB = new AABB2();\n    }\n\n    public focus(x: number, y: number) {\n        //Need to move the camera container the oposite way to the actual coords\n        this.realPosition.x = x;\n        this.realPosition.y = y;\n\n        //Clamp position inside shrunk camera extents\n        this.cameraExtentsAABB.fitPoint(this.realPosition);\n\n        var positionx = -this.realPosition.x + this.halfViewportSize.x;\n        var positiony = -this.realPosition.y + this.halfViewportSize.y;\n\n        if (Math.abs(positionx - this.position.x) > 2)\n            this.position.x = this.position.x + (positionx - this.position.x) * CAMERA_TRACKING_SPEED;\n        if (Math.abs(positiony - this.position.y) > 2)\n            this.position.y = this.position.y + (positiony - this.position.y) * CAMERA_TRACKING_SPEED;\n        // position.y = positiony;\n\n        this.position.plusEquals(this.shake);\n        this.position.x = this.rf(this.position.x);\n        this.position.y = this.rf(this.position.y);\n        this.shake.setTo(0, 0);\n    }\n\n    public resize(width: number, height: number) {\n        this.viewportSize.x = width;\n        this.viewportSize.y = height;\n        this.halfViewportSize.x = width / 2;\n        this.halfViewportSize.y = height / 2;\n        this.viewPortAABB.l = this.viewPortAABB.t = 0;\n        this.viewPortAABB.r = this.viewportSize.x;\n        this.viewPortAABB.b = this.viewportSize.y;\n        //Clone the world size, then shrink it around the center by viewport size\n        this.cameraExtentsAABB = this.worldExtentsAABB.clone();\n        this.cameraExtentsAABB.expand2(width, height);\n    }\n\n    private rf(v: number) {\n        return v;\n        return Math.floor(v);\n        return Math.round(v);\n    }\n\n}\n","import { Vector2 } from \"../geom/Vector2\";\nimport { DisplayObjectContainer } from \"./DisplayObjectContainer\";\nimport { SpriteTexture } from \"./SpriteTexture\";\n\nexport class Sprite extends DisplayObjectContainer {\n\n    public anchor: Vector2;\n    public texture: SpriteTexture;\n    public blendEquation: number;\n    public blendFuncS: number;\n    public blendFuncD: number;\n\n    public transformedVerts: Float32Array;\n\n    constructor() {\n        super();\n        this.renderable = true;\n        this.anchor = new Vector2();\n        this.transformedVerts = new Float32Array(8);\n        this.blendEquation = WebGLRenderingContext.FUNC_ADD;\n        this.blendFuncS = WebGLRenderingContext.SRC_ALPHA;\n        this.blendFuncD = WebGLRenderingContext.ONE_MINUS_SRC_ALPHA;\n    }\n\n    public draw(index:number, data: Float32Array) {\n        const width = this.texture.frame.width;\n        const height = this.texture.frame.height;\n\n        const aX = this.anchor.x;\n        const aY = this.anchor.y;\n        const w0 = width * (1 - aX);\n        const w1 = width * -aX;\n\n        const h0 = height * (1 - aY);\n        const h1 = height * -aY;\n\n        const a = this.worldTransform[0];\n        const b = this.worldTransform[3];\n        const c = this.worldTransform[1];\n        const d = this.worldTransform[4];\n        const tx = this.worldTransform[2];\n        const ty = this.worldTransform[5];\n//\n/*\n        this.transformedVerts[0] = a * w1 + c * h1 + tx;\n        this.transformedVerts[1] = d * h1 + b * w1 + ty;\n\n        this.transformedVerts[2] = a * w0 + c * h1 + tx;\n        this.transformedVerts[3] = d * h1 + b * w0 + ty;\n\n        this.transformedVerts[4] = a * w0 + c * h0 + tx;\n        this.transformedVerts[5] = d * h0 + b * w0 + ty;\n\n        this.transformedVerts[6] = a * w1 + c * h0 + tx;\n        this.transformedVerts[7] = d * h0 + b * w1 + ty;\n        \n//\n*/\n        const uvs = this.texture.uvs;\n        data[index + 0] = a * w1 + c * h1 + tx;\n        data[index + 1] = d * h1 + b * w1 + ty;\n        //UV\n        data[index + 2] = uvs[0]; //frame.x / tw;\n        data[index + 3] = uvs[1]; //frame.y / th;\n        //Colour\n        data[index + 4] = this.worldAlpha;\n\n        //1\n        //Verts\n        data[index + 5] = a * w0 + c * h1 + tx;\n        data[index + 6] = d * h1 + b * w0 + ty;\n        //UV\n        data[index + 7] = uvs[2]; //(frame.x + frame.width) / tw;\n        data[index + 8] = uvs[3]; //frame.y / th;\n        //Colour\n        data[index + 9] = this.worldAlpha;\n\n        //2\n        //Verts\n        data[index + 10] = a * w0 + c * h0 + tx;\n        data[index + 11] = d * h0 + b * w0 + ty;\n        //UV\n        data[index + 12] = uvs[4]; //(frame.x + frame.width) / tw;\n        data[index + 13] = uvs[5]; //(frame.y + frame.height) / th;\n        //Colour\n        data[index + 14] = this.worldAlpha;\n\n        //3\n        //Verts\n        data[index + 15] = a * w1 + c * h0 + tx;\n        data[index + 16] = d * h0 + b * w1 + ty;\n        //UV\n        data[index + 17] = uvs[6]; //frame.x / tw;\n        data[index + 18] = uvs[7]; //(frame.y + frame.height) / th;\n        //Colour\n        data[index + 19] = this.worldAlpha; \n    }\n\n    public calcExtents() {\n        const width = this.texture.frame.width;\n        const height = this.texture.frame.height;\n\n        const aX = this.anchor.x;\n        const aY = this.anchor.y;\n        const w0 = width * (1 - aX);\n        const w1 = width * -aX;\n\n        const h0 = height * (1 - aY);\n        const h1 = height * -aY;\n\n        const a = this.worldTransform[0];\n        const b = this.worldTransform[3];\n        const c = this.worldTransform[1];\n        const d = this.worldTransform[4];\n        const tx = this.worldTransform[2];\n        const ty = this.worldTransform[5];\n\n        this.transformedVerts[0] = a * w1 + c * h1 + tx;\n        this.transformedVerts[1] = d * h1 + b * w1 + ty;\n\n        this.transformedVerts[2] = a * w0 + c * h1 + tx;\n        this.transformedVerts[3] = d * h1 + b * w0 + ty;\n\n        this.transformedVerts[4] = a * w0 + c * h0 + tx;\n        this.transformedVerts[5] = d * h0 + b * w0 + ty;\n\n        this.transformedVerts[6] = a * w1 + c * h0 + tx;\n        this.transformedVerts[7] = d * h0 + b * w1 + ty;\n    }\n}\n","export class Rectangle {\n    public x: number;\n    public y: number;\n    public width: number;\n    public height: number;\n\n    constructor(x = 0, y = 0, width = 0, height = 0) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n}\n","import { Texture } from \"../core/Texture\";\nimport { Rectangle } from \"../geom/Rectangle\";\nimport { Vector2 } from \"../geom/Vector2\";\n\nexport class SpriteTexture {\n    public baseTexture: Texture;\n    public frame: Rectangle;\n    public trim: Vector2;\n    public pivot: Vector2;\n    public noFrame: boolean;\n    public uvs: Float32Array;\n\n    constructor(baseTexture: Texture, frame: Rectangle = undefined, pivot: Vector2 = undefined) {\n        this.baseTexture = baseTexture;\n\n        if (!frame) {\n            this.noFrame = true;\n            this.frame = new Rectangle(0, 0, 1, 1);\n        } else {\n            this.noFrame = false;\n            this.frame = frame;\n        }\n\n        this.trim = new Vector2();\n        this.pivot = pivot ? new Vector2() : pivot;\n        this.uvs = new Float32Array(8);\n\n        this.updateUVS();\n    }\n\n    public updateUVS() {\n        var tw = this.baseTexture.width;\n        var th = this.baseTexture.height;\n\n        this.uvs[0] = this.frame.x / tw;\n        this.uvs[1] = this.frame.y / th;\n\n        this.uvs[2] = (this.frame.x + this.frame.width) / tw;\n        this.uvs[3] = this.frame.y / th;\n\n        this.uvs[4] = (this.frame.x + this.frame.width) / tw;\n        this.uvs[5] = (this.frame.y + this.frame.height) / th;\n\n        this.uvs[6] = this.frame.x / tw;\n        this.uvs[7] = (this.frame.y + this.frame.height) / th;\n    }\n}\n","import { DisplayObjectContainer } from \"./DisplayObjectContainer\";\n\nexport class Stage extends DisplayObjectContainer {\n    constructor() {\n        super();\n        this.id = \"Stage\";\n        this.worldAlpha = this.alpha;\n    }\n\n    public updateTransform() {\n        for (const child of this.children) { \n            child.updateTransform();\n        }     \n    }\n}\n","import { Renderer } from \"./Renderer\";\n\nexport class Buffer {\n    renderer: Renderer;\n\n    target: number;\n    glBuffer: WebGLBuffer;\n    usage: number;\n\n    data: any;\n    size: number;\n\n    needsUpdate: boolean;\n\n    constructor(renderer: Renderer, target: number = WebGLRenderingContext.ARRAY_BUFFER) {\n        this.renderer = renderer;\n        this.glBuffer = this.renderer.gl.createBuffer();\n        this.target = target;\n        this.size = -1;\n        this.needsUpdate = true;\n    }\n\n    bind() {\n        if (this.renderer.state.boundBuffer !== this) {\n            this.renderer.gl.bindBuffer(this.target, this.glBuffer);\n            this.renderer.state.boundBuffer = this;\n        }\n    }\n\n    update(data: any = undefined, usage: number = WebGLRenderingContext.DYNAMIC_DRAW) {\n        this.usage = usage;\n        this.bind();\n\n        if (!data && this.data) {\n            this.renderer.gl.bufferData(this.target, this.data, this.usage);\n            return;\n        }\n\n        if (data instanceof Array) {\n            this.data = new Float32Array(data);\n        } else {\n            this.data = data;\n        }\n\n        if (this.size !== data.byteLength) {\n            this.renderer.gl.bufferData(this.target, data, usage);\n            this.size = data.byteLength;\n        } else {\n            this.renderer.gl.bufferSubData(this.target, 0, data);\n        }\n\n        this.needsUpdate = false;\n    }\n}\n","\n// attribute params\n// {\n//     data - typed array eg UInt16Array for indices, Float32Array\n//     size - int default 1\n//     instanced - default null. Pass divisor amount\n//     type - gl enum default gl.UNSIGNED_SHORT for 'index', gl.FLOAT for others\n//     normalized - boolean default false\n//     buffer - gl buffer, if buffer exists, don't need to provide data\n//     stride - default 0 - for when passing in buffer\n//     offset - default 0 - for when passing in buffer\n//     count - default null - for when passing in buffer\n//     min - array - for when passing in buffer\n//     max - array - for when passing in buffer\n// }\n\nimport { Buffer } from \"./Buffer\";\nimport { Program } from \"./Program\";\nimport { Renderer } from \"./Renderer\";\n\n// TODO: fit in transform feedback\n// TODO: when would I disableVertexAttribArray ?\n// TODO: use offset/stride if exists\n\ninterface Attribute {\n    id: number;\n    data: any;\n    size: number;\n    instanced: any;\n    type: any;\n    normalized: boolean;\n    divisor: number;\n    buffer: Buffer;\n    stride: number;\n    offset: number;\n    count: number;\n    min: number;\n    max: number;\n    target: number;\n    needsUpdate?: boolean;\n}\n\ninterface AttributeMap {\n    [name: string]: Attribute;\n}\ninterface BufferMap {\n    [name: string]: Buffer;\n}\n\nexport const QUAD_POS = new Float32Array([-1, -1, 1, -1, -1, 1, 1, 1]);\nexport const QUAD_UV = new Float32Array([0, 0, 1, 0, 0, 1, 1, 1]);\n\nexport const INDEX_ATTR = \"index\";\n\nlet ID = 1;\nlet ATTR_ID = 1;\n\n// To stop inifinite warnings\nlet isBoundsWarned = false;\n\nexport class Geometry {\n    renderer: Renderer;\n    gl: WebGLRenderingContext;\n    id: number;\n\n    attributes: AttributeMap;\n    buffers: Map<Buffer,Array<Attribute>>;\n\n    VAOs: any;\n    drawRange: any;\n    instancedCount: number;\n\n    isInstanced: boolean;\n\n    constructor(renderer, attributes = {}) {\n        this.renderer = renderer;\n        this.gl = this.renderer.gl;\n        this.attributes = attributes;\n        this.buffers = new Map();\n        this.id = ID++;\n\n        // Store one VAO per program attribute locations order\n        this.VAOs = {};\n\n        this.drawRange = { start: 0, count: 0 };\n        this.instancedCount = 0;\n        this.isInstanced = false;\n\n        // Unbind current VAO so that new buffers don't get added to active mesh\n        this.renderer.bindVertexArray(null);\n        this.renderer.currentGeometry = null;\n\n        // create the buffers\n        for (let key in attributes) {\n            this.addAttribute(key, attributes[key]);\n        }\n    }\n\n    addAttribute(key: string, attr: Attribute) {\n        this.attributes[key] = attr;\n\n        // Set options\n        attr.id = ATTR_ID++; // TODO: currently unused, remove?\n        attr.size = attr.size || 1;\n\n        if (!attr.buffer) {\n            const buffer = new Buffer(this.renderer);\n            buffer.update(attr.data);\n            attr.buffer = buffer;\n            this.buffers.set(buffer,[attr])\n            //attr.buffer = this.gl.createBuffer();\n            // Push data to buffer\n            //this.updateAttribute(attr);\n        } else {\n            attr.data = attr.buffer.data;\n            const existingBuffer = this.buffers.has(attr.buffer);\n            if (existingBuffer) {\n                this.buffers.get(attr.buffer).push(attr);\n            } else {\n                this.buffers.set(attr.buffer,[attr]);\n            }\n        }  \n\n        attr.type =\n            attr.type ||\n            (attr.data.constructor === Float32Array\n                ? this.gl.FLOAT\n                : attr.data.constructor === Uint16Array\n                ? this.gl.UNSIGNED_SHORT\n                : this.gl.UNSIGNED_INT); // Uint32Array\n        attr.target = key === INDEX_ATTR ? this.gl.ELEMENT_ARRAY_BUFFER : this.gl.ARRAY_BUFFER;\n        attr.normalized = attr.normalized || false;\n        attr.stride = attr.stride || 0;\n        attr.offset = attr.offset || 0;\n        attr.count = attr.count || (attr.stride ? attr.data.byteLength / attr.stride : attr.data.length / attr.size);\n        attr.divisor = attr.instanced || 0;\n        attr.needsUpdate = false;\n      \n        // Update geometry counts. If indexed, ignore regular attributes\n        if (attr.divisor) {\n            this.isInstanced = true;\n            if (this.instancedCount && this.instancedCount !== attr.count * attr.divisor) {\n                console.warn(\"geometry has multiple instanced buffers of different length\");\n                return (this.instancedCount = Math.min(this.instancedCount, attr.count * attr.divisor));\n            }\n            this.instancedCount = attr.count * attr.divisor;\n        } else if (key === INDEX_ATTR) {\n            this.drawRange.count = attr.count;\n        } else if (!this.attributes.index) {\n            this.drawRange.count = Math.max(this.drawRange.count, attr.count);\n        }\n    }\n\n    setIndex(attr: any) {\n        this.addAttribute(INDEX_ATTR, attr);\n    }\n\n    setDrawRange(start, count) {\n        this.drawRange.start = start;\n        this.drawRange.count = count;\n    }\n\n    setInstancedCount(value) {\n        this.instancedCount = value;\n    }\n\n    createVAO(program: Program) {\n        this.VAOs[program.attributeOrder] = this.renderer.createVertexArray();\n        this.renderer.bindVertexArray(this.VAOs[program.attributeOrder]);\n        this.bindAttributes(program);\n    }\n\n    bindAttributes(program: Program) {\n        // Link all attributes to program using gl.vertexAttribPointer\n        program.attributeLocations.forEach((location, { name, type }) => {\n            // If geometry missing a required shader attribute\n            if (!this.attributes[name]) {\n                console.warn(`active attribute ${name} not being supplied`);\n                return;\n            }\n\n            const attr = this.attributes[name];\n\n            this.gl.bindBuffer(attr.target, attr.buffer.glBuffer);\n            this.renderer.state.boundBuffer = attr.buffer;\n\n            // For matrix attributes, buffer needs to be defined per column\n            let numLoc = 1;\n            if (type === WebGLRenderingContext.FLOAT_MAT2) numLoc = 2; // mat2\n            if (type === WebGLRenderingContext.FLOAT_MAT3) numLoc = 3; // mat3\n            if (type === WebGLRenderingContext.FLOAT_MAT4) numLoc = 4; // mat4\n\n            const size = attr.size / numLoc;\n            const stride = numLoc === 1 ? 0 : numLoc * numLoc * numLoc;\n            const offset = numLoc === 1 ? 0 : numLoc * numLoc;\n\n            for (let i = 0; i < numLoc; i++) {\n                this.gl.vertexAttribPointer(\n                    location + i,\n                    size,\n                    attr.type,\n                    attr.normalized,\n                    attr.stride + stride,\n                    attr.offset + i * offset\n                );\n                this.gl.enableVertexAttribArray(location + i);\n\n                // For instanced attributes, divisor needs to be set.\n                // For firefox, need to set back to 0 if non-instanced drawn after instanced. Else won't render\n                this.renderer.vertexAttribDivisor(location + i, attr.divisor);\n            }\n        });\n        // Bind indices if geometry indexed\n        if (this.attributes.index) this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.attributes.index.buffer.glBuffer);\n    }\n\n    draw(program: Program, mode: number=  this.gl.TRIANGLES ) {\n        if (this.renderer.currentGeometry !== `${this.id}_${program.attributeOrder}`) {\n            if (!this.VAOs[program.attributeOrder]) this.createVAO(program);\n            this.renderer.bindVertexArray(this.VAOs[program.attributeOrder]);\n            this.renderer.currentGeometry = `${this.id}_${program.attributeOrder}`;\n        }\n\n        for (const entry of this.buffers) {\n            const buffer = entry[0];\n            if (buffer.needsUpdate) {\n                buffer.update();\n            }\n        }\n\n        if (this.isInstanced) {\n            if (this.attributes.index) {\n                this.renderer.drawElementsInstanced(\n                    mode,\n                    this.drawRange.count,\n                    this.attributes.index.type,\n                    this.attributes.index.offset + this.drawRange.start * 2,\n                    this.instancedCount\n                );\n            } else {\n                this.renderer.drawArraysInstanced(\n                    mode,\n                    this.drawRange.start,\n                    this.drawRange.count,\n                    this.instancedCount\n                );\n            }\n        } else {\n            if (this.attributes.index) {\n                this.gl.drawElements(\n                    mode,\n                    this.drawRange.count,\n                    this.attributes.index.type,\n                    this.attributes.index.offset + this.drawRange.start * 2\n                );\n            } else {\n                this.gl.drawArrays(mode, this.drawRange.start, this.drawRange.count);\n            }\n        }\n    }\n\n    getPositionArray() {\n        // Use position buffer, or min/max if available\n        const attr = this.attributes.position;\n        // if (attr.min) return [...attr.min, ...attr.max];\n        if (attr.data) return attr.data;\n        if (isBoundsWarned) return;\n        console.warn(\"No position buffer data found to compute bounds\");\n        return (isBoundsWarned = true);\n    }\n\n    // remove() {\n    //     if (this.vao) this.renderer.deleteVertexArray(this.vao);\n    //     for (let key in this.attributes) {\n    //         this.gl.deleteBuffer(this.attributes[key].buffer);\n    //         delete this.attributes[key];\n    //     }\n    // }\n}\n","// TODO: upload empty texture if null ? maybe not\n// TODO: upload identity matrix if null ?\n// TODO: sampler Cube\n\nimport { BlendEquation, BlendFunc, Renderer } from \"./Renderer\";\n\nlet ID = 1;\n\n// cache of typed arrays used to flatten uniform arrays\nconst arrayCacheF32 = {};\n\ninterface ProgramParamters {\n    vertex?: string;\n    fragment?: string;\n    uniforms?: any;\n    transparent?: boolean;\n    depthTest?: boolean;\n    depthWrite?: boolean;\n    depthFunc?: number;\n}\n\ninterface UniformData {\n    location: WebGLUniformLocation;\n    uniformName: string;\n    isStruct: boolean;\n    isStructArray?: boolean;\n    structIndex?: number;\n    structProperty?: string;\n}\n\nexport class Program {\n    renderer: Renderer;\n    gl: WebGLRenderingContext;\n    id: number;\n\n    uniforms: any;\n    program: WebGLProgram;\n\n    uniformLocations: Map<WebGLActiveInfo, UniformData>;\n    attributeLocations: Map<WebGLActiveInfo, any>;\n    attributeOrder: string;\n\n    blendFunc: BlendFunc;\n    blendEquation: BlendEquation;\n\n    depthTest: boolean;\n    depthWrite: boolean;\n    depthFunc: number;\n\n    transparent: boolean;\n\n    constructor(\n        renderer: Renderer,\n        {\n            vertex = undefined,\n            fragment = undefined,\n            uniforms = {},\n            transparent = false,\n            depthTest = true,\n            depthWrite = true,\n            depthFunc = WebGLRenderingContext.LESS,\n        }: ProgramParamters = {}\n    ) {\n        this.renderer = renderer;\n        this.gl = this.renderer.gl;\n        this.id = ID++;\n\n        this.uniforms = uniforms;\n\n        if (!vertex) console.warn(\"vertex shader not supplied\");\n        if (!fragment) console.warn(\"fragment shader not supplied\");\n\n        // Store program state\n        this.transparent = transparent;\n        this.depthTest = depthTest;\n        this.depthWrite = depthWrite;\n        this.depthFunc = depthFunc;\n        this.blendFunc = {};\n        this.blendEquation = {};\n\n        // set default blendFunc if transparent flagged\n        if (this.transparent && !this.blendFunc.src) {\n            if (this.renderer.premultipliedAlpha) this.setBlendFunc(this.gl.ONE, this.gl.ONE_MINUS_SRC_ALPHA);\n            else this.setBlendFunc(this.gl.SRC_ALPHA, this.gl.ONE_MINUS_SRC_ALPHA);\n        }\n\n        // compile vertex shader and log errors\n        const vertexShader = this.gl.createShader(this.gl.VERTEX_SHADER);\n        this.gl.shaderSource(vertexShader, vertex);\n        this.gl.compileShader(vertexShader);\n        if (this.gl.getShaderInfoLog(vertexShader) !== \"\") {\n            console.warn(`${this.gl.getShaderInfoLog(vertexShader)}\\nVertex Shader\\n${addLineNumbers(vertex)}`);\n        }\n\n        // compile fragment shader and log errors\n        const fragmentShader = this.gl.createShader(this.gl.FRAGMENT_SHADER);\n        this.gl.shaderSource(fragmentShader, fragment);\n        this.gl.compileShader(fragmentShader);\n        if (this.gl.getShaderInfoLog(fragmentShader) !== \"\") {\n            console.warn(`${this.gl.getShaderInfoLog(fragmentShader)}\\nFragment Shader\\n${addLineNumbers(fragment)}`);\n        }\n\n        // compile program and log errors\n        this.program = this.gl.createProgram();\n        this.gl.attachShader(this.program, vertexShader);\n        this.gl.attachShader(this.program, fragmentShader);\n        this.gl.linkProgram(this.program);\n        if (!this.gl.getProgramParameter(this.program, this.gl.LINK_STATUS)) {\n            console.warn(this.gl.getProgramInfoLog(this.program));\n            return;\n        }\n\n        // Remove shader once linked\n        this.gl.deleteShader(vertexShader);\n        this.gl.deleteShader(fragmentShader);\n\n        // Get active uniform locations\n        this.uniformLocations = new Map();\n        let numUniforms = this.gl.getProgramParameter(this.program, this.gl.ACTIVE_UNIFORMS);\n\n        for (let uIndex = 0; uIndex < numUniforms; uIndex++) {\n            let uniform = this.gl.getActiveUniform(this.program, uIndex);\n            const split = uniform.name.match(/(\\w+)/g);\n\n            let uniformData: UniformData = {\n                location: this.gl.getUniformLocation(this.program, uniform.name),\n                uniformName: split[0],\n                isStruct: false,\n            };\n\n            if (split.length === 3) {\n                uniformData.isStructArray = true;\n                uniformData.structIndex = Number(split[1]);\n                uniformData.structProperty = split[2];\n            } else if (split.length === 2 && isNaN(Number(split[1]))) {\n                uniformData.isStruct = true;\n                uniformData.structProperty = split[1];\n            }\n            this.uniformLocations.set(uniform, uniformData);\n        }\n\n        // Get active attribute locations\n        this.attributeLocations = new Map();\n        const locations = [];\n        const numAttribs = this.gl.getProgramParameter(this.program, this.gl.ACTIVE_ATTRIBUTES);\n        for (let aIndex = 0; aIndex < numAttribs; aIndex++) {\n            const attribute = this.gl.getActiveAttrib(this.program, aIndex);\n            const location = this.gl.getAttribLocation(this.program, attribute.name);\n            locations[location] = attribute.name;\n            this.attributeLocations.set(attribute, location);\n        }\n        this.attributeOrder = locations.join(\"\");\n    }\n\n    setBlendFunc(src, dst, srcAlpha = undefined, dstAlpha = undefined) {\n        this.blendFunc.src = src;\n        this.blendFunc.dst = dst;\n        this.blendFunc.srcAlpha = srcAlpha;\n        this.blendFunc.dstAlpha = dstAlpha;\n        if (src) this.transparent = true;\n    }\n\n    setBlendEquation(modeRGB, modeAlpha) {\n        this.blendEquation.modeRGB = modeRGB;\n        this.blendEquation.modeAlpha = modeAlpha;\n    }\n\n    use() {\n        let textureUnit = -1;\n        const programActive = this.renderer.currentProgram === this.id;\n\n        // Avoid gl call if program already in use\n        if (!programActive) {\n            this.gl.useProgram(this.program);\n            this.renderer.currentProgram = this.id;\n        }\n\n        // Set only the active uniforms found in the shader\n        this.uniformLocations.forEach((location, activeUniform) => {\n            let name = location.uniformName;\n\n            // get supplied uniform\n            let uniform = this.uniforms[name];\n\n            // For structs, get the specific property instead of the entire object\n            if (location.isStruct) {\n                uniform = uniform[location.structProperty];\n                //name += `.${location.structProperty}`;\n            }\n            if (location.isStructArray) {\n                uniform = uniform[location.structIndex][location.structProperty];\n                //name += `[${location.structIndex}].${location.structProperty}`;\n            }\n\n            // if (!uniform) {\n            //     return warn(`Active uniform ${name} has not been supplied`);\n            // }\n\n            // if (uniform && uniform.value === undefined) {\n            //     return warn(`${name} uniform is missing a value parameter`);\n            // }\n\n            if (uniform.value.texture) {\n                textureUnit = textureUnit + 1;\n\n                // Check if texture needs to be updated\n                uniform.value.update(textureUnit);\n                return setUniform(this.gl, activeUniform.type, location.location, textureUnit);\n            }\n\n            // For texture arrays, set uniform as an array of texture units instead of just one\n            if (uniform.value.length && uniform.value[0].texture) {\n                const textureUnits = [];\n                uniform.value.forEach((value) => {\n                    textureUnit = textureUnit + 1;\n                    value.update(textureUnit);\n                    textureUnits.push(textureUnit);\n                });\n\n                return setUniform(this.gl, activeUniform.type, location.location, textureUnits);\n            }\n\n            setUniform(this.gl, activeUniform.type, location.location, uniform.value);\n        });\n\n        this.applyState();\n    }\n\n    applyState() {\n        if (this.depthTest) {\n            this.renderer.enable(this.gl.DEPTH_TEST);\n        } else {\n            this.renderer.disable(this.gl.DEPTH_TEST);\n        }\n\n        if (this.blendFunc.src) {\n            this.renderer.enable(this.gl.BLEND);\n        } else {\n            this.renderer.disable(this.gl.BLEND);\n        }\n\n        this.renderer.setDepthMask(this.depthWrite);\n        this.renderer.setDepthFunc(this.depthFunc);\n\n        if (this.blendFunc.src)\n            this.renderer.setBlendFunc(\n                this.blendFunc.src,\n                this.blendFunc.dst,\n                this.blendFunc.srcAlpha,\n                this.blendFunc.dstAlpha\n            );\n        this.renderer.setBlendEquation(this.blendEquation.modeRGB, this.blendEquation.modeAlpha);\n    }\n\n    remove() {\n        this.gl.deleteProgram(this.program);\n    }\n}\n\nfunction setUniform(gl: WebGLRenderingContext, type: number, location: WebGLUniformLocation, value: any) {\n    const isArray = value.length;\n    switch (type) {\n        case WebGLRenderingContext.FLOAT: // 5126\n            return isArray ? gl.uniform1fv(location, value) : gl.uniform1f(location, value); // FLOAT\n        case WebGLRenderingContext.FLOAT_VEC2: // 35664\n            return gl.uniform2fv(location, value); // FLOAT_VEC2\n        case WebGLRenderingContext.FLOAT_VEC3: // 35665\n            return gl.uniform3fv(location, value); // FLOAT_VEC3\n        case WebGLRenderingContext.FLOAT_VEC4:\n            return gl.uniform4fv(location, value); // FLOAT_VEC4\n        case 35670: // BOOL\n        case 5124: // INT\n        case 35678: // SAMPLER_2D\n        case 35680:\n            return isArray ? gl.uniform1iv(location, value) : gl.uniform1i(location, value); // SAMPLER_CUBE\n        case 35671: // BOOL_VEC2\n        case 35667:\n            return gl.uniform2iv(location, value); // INT_VEC2\n        case 35672: // BOOL_VEC3\n        case 35668:\n            return gl.uniform3iv(location, value); // INT_VEC3\n        case 35673: // BOOL_VEC4\n        case 35669:\n            return gl.uniform4iv(location, value); // INT_VEC4\n        case 35674:\n            return gl.uniformMatrix2fv(location, false, value); // FLOAT_MAT2\n        case 35675:\n            return gl.uniformMatrix3fv(location, false, value); // FLOAT_MAT3\n        case 35676:\n            return gl.uniformMatrix4fv(location, false, value); // FLOAT_MAT4\n    }\n}\n\nfunction addLineNumbers(string) {\n    let lines = string.split(\"\\n\");\n    for (let i = 0; i < lines.length; i++) {\n        lines[i] = i + 1 + \": \" + lines[i];\n    }\n    return lines.join(\"\\n\");\n}\n\nlet warnCount = 0;\nfunction warn(message) {\n    if (warnCount > 100) return;\n    console.warn(message);\n    warnCount++;\n    if (warnCount > 100) console.warn(\"More than 100 program warnings - stopping logs.\");\n}\n","import { Buffer } from \"../../core/Buffer\";\nimport { Geometry } from \"../../core/Geometry\";\nimport { Program } from \"../../core/Program\";\nimport { Renderer } from \"../../core/Renderer\";\nimport { Texture } from \"../../core/Texture\";\nimport { DisplayObjectContainer } from \"../../displaylist/DisplayObjectContainer\";\nimport { Sprite } from \"../../displaylist/Sprite\";\nimport { Stage } from \"../../displaylist/Stage\";\n\nconst BUFFER_SIZE = 10000;\nconst BYTES_PER_QUAD = 5 * 4;\n\nexport class SpriteRenderer {\n    renderer: Renderer;\n    gl: WebGLRenderingContext;\n\n    stage: Stage;\n\n    program: Program;\n    uniforms: any;\n    geometry: Geometry;\n\n    private indexBuffer: Buffer;\n    //private indices: Uint16Array;\n\n    private dataBuffer: Buffer;\n    //private data: Float32Array;\n\n    constructor(renderer) {\n        this.renderer = renderer;\n        this.gl = renderer.gl;\n\n        this.uniforms = {\n            projectionVector: { value: [] },\n            uSampler: { value: new Texture(renderer) },\n        };\n\n        this.program = new Program(renderer, { vertex, fragment, uniforms: this.uniforms });\n\n        this.dataBuffer = new Buffer(this.renderer);\n        this.dataBuffer.update(new Float32Array(BUFFER_SIZE * BYTES_PER_QUAD));\n        \n        this.indexBuffer = new Buffer(this.renderer, WebGLRenderingContext.ELEMENT_ARRAY_BUFFER);\n        this.indexBuffer.update(createQuadIndiciesBuffer(BUFFER_SIZE), WebGLRenderingContext.STATIC_DRAW);\n\n        this.geometry = new Geometry(renderer, {\n            aVertexPosition: {\n                buffer: this.dataBuffer,\n                type: WebGLRenderingContext.FLOAT,\n                size: 2,\n                stride: BYTES_PER_QUAD,\n                offset: 0,\n            },\n            aTextureCoord: {\n                buffer: this.dataBuffer,\n                type: WebGLRenderingContext.FLOAT,\n                size: 2,\n                stride: BYTES_PER_QUAD,\n                offset: 8,\n            },\n            aColor: {\n                buffer: this.dataBuffer,\n                type: WebGLRenderingContext.FLOAT,\n                size: 1,\n                stride: BYTES_PER_QUAD,\n                offset: 16,\n                count: 6\n            },\n        });\n        this.geometry.setIndex({ \n            buffer: this.indexBuffer, \n            type: WebGLRenderingContext.UNSIGNED_SHORT }\n        );\n    }\n\n    public resize(width: number, height: number) {\n        this.uniforms.projectionVector.value[0] = width / 2;\n        this.uniforms.projectionVector.value[1] = height / 2;\n    }\n\n    public addStage(stage: Stage) {\n        this.stage = stage;\n    }\n\n    draw() {\n        this.stage.updateTransform();\n\n        var node: DisplayObjectContainer;\n        var stack: Array<DisplayObjectContainer>;\n        var top: number;\n\n        node = this.stage;\n        stack = new Array<DisplayObjectContainer>(1000); // Arbitary assignment of 1000 stack slots\n\n        stack[0] = node;\n        top = 1;\n\n        var indexRun = 0;\n        var currentTexture = null;\n\n        node.iterate((node) => {\n            if (node.visible && node.renderable) {\n                var sprite: Sprite = node as Sprite;\n                if (sprite.texture.baseTexture != currentTexture || indexRun == BUFFER_SIZE) {\n                    this.Flush(currentTexture, indexRun);\n                    indexRun = 0;\n                    currentTexture = sprite.texture.baseTexture;\n                    this.gl.blendEquation(sprite.blendEquation);\n                    this.gl.blendFunc(sprite.blendFuncS, sprite.blendFuncD);\n                }\n                sprite.draw(indexRun * BYTES_PER_QUAD, this.dataBuffer.data);\n                indexRun++;\n            }\n        });\n/*\n        while (top > 0) {\n            var thisNode = stack[--top];\n            //If there is an adjacent node, push it to the stack\n            if (thisNode.next != null) stack[top++] = thisNode.next as DisplayObjectContainer; //Big assumption is only DisplayListContainers, which it is for now.\n            //If there is a child list, push the head (this will get processed first)\n            if (thisNode.head != null) stack[top++] = thisNode.head as DisplayObjectContainer; //Same assumption.\n            //return the result\n\n            if (thisNode.visible && thisNode.renderable) {\n                var sprite: Sprite = thisNode as Sprite;\n                if (sprite.texture.baseTexture != currentTexture || indexRun == BUFFER_SIZE) {\n                    this.Flush(currentTexture, indexRun);\n                    indexRun = 0;\n                    currentTexture = sprite.texture.baseTexture;\n                    this.gl.blendEquation(sprite.blendEquation);\n                    this.gl.blendFunc(sprite.blendFuncS, sprite.blendFuncD);\n                }\n                //if (clip == null || sprite.aabb.intersect(clip)) {\n                //sprite.calcExtents();\n                //this.AddSpriteToBatch(sprite, indexRun);\n                sprite.draw(indexRun * BYTES_PER_QUAD, this.dataBuffer.data);\n                indexRun++;\n                // }\n            }\n        }\n*/\n        if (indexRun > 0) this.Flush(currentTexture, indexRun);\n    }\n\n    private Flush(texture: Texture, size: number) {\n        if (!texture) return;\n        this.uniforms.uSampler.value = texture;\n        //this.geometry.attributes[\"aVertexPosition\"].needsUpdate = true;\n        this.dataBuffer.needsUpdate = true;\n        this.program.use();\n        this.geometry.setDrawRange(0,size * 6);\n        this.geometry.draw(this.program);\n    }\n/*\n    public AddSpriteToBatch(sprite: Sprite, indexRun: number) {\n        sprite.calcExtents();\n        const index = indexRun * BYTES_PER_QUAD;\n        const uvs = sprite.texture.uvs;\n        const data = this.dataBuffer.data;\n        //0\n        //Verts\n        data[index + 0] = sprite.transformedVerts[0];\n        data[index + 1] = sprite.transformedVerts[1];\n        //UV\n        data[index + 2] = uvs[0]; //frame.x / tw;\n        data[index + 3] = uvs[1]; //frame.y / th;\n        //Colour\n        data[index + 4] = sprite.worldAlpha;\n\n        //1\n        //Verts\n        data[index + 5] = sprite.transformedVerts[2];\n        data[index + 6] = sprite.transformedVerts[3];\n        //UV\n        data[index + 7] = uvs[2]; //(frame.x + frame.width) / tw;\n        data[index + 8] = uvs[3]; //frame.y / th;\n        //Colour\n        data[index + 9] = sprite.worldAlpha;\n\n        //2\n        //Verts\n        data[index + 10] = sprite.transformedVerts[4];\n        data[index + 11] = sprite.transformedVerts[5];\n        //UV\n        data[index + 12] = uvs[4]; //(frame.x + frame.width) / tw;\n        data[index + 13] = uvs[5]; //(frame.y + frame.height) / th;\n        //Colour\n        data[index + 14] = sprite.worldAlpha;\n\n        //3\n        //Verts\n        data[index + 15] = sprite.transformedVerts[6];\n        data[index + 16] = sprite.transformedVerts[7];\n        //UV\n        data[index + 17] = uvs[6]; //frame.x / tw;\n        data[index + 18] = uvs[7]; //(frame.y + frame.height) / th;\n        //Colour\n        data[index + 19] = sprite.worldAlpha;\n    }\n        */\n}\n\nconst vertex = `\n    precision mediump float;\n\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute float aColor;\n\n    uniform vec2 projectionVector;\n    varying vec2 vTextureCoord;\n    varying float vColor;\n\n    void main(void) {\n        gl_Position = vec4( aVertexPosition.x / projectionVector.x -1.0, aVertexPosition.y / -projectionVector.y + 1.0 , 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n    }\n`;\n\nconst fragment = `\n    precision mediump float;\n\n    varying vec2 vTextureCoord;\n    varying float vColor;\n\n    uniform sampler2D uSampler;\n\n    void main(void) {\n        gl_FragColor = texture2D(uSampler,vTextureCoord) * vColor;\n    }\n`;\n\nexport function createQuadIndiciesBuffer(count: number): Uint16Array {\n    const indices = new Uint16Array(count * 6);\n\n    for (var i = 0; i < count; i++) {\n        const index2 = i * 6;\n        const index3 = i * 4;\n        indices[index2 + 0] = index3 + 0;\n        indices[index2 + 1] = index3 + 1;\n        indices[index2 + 2] = index3 + 2;\n        indices[index2 + 3] = index3 + 0;\n        indices[index2 + 4] = index3 + 2;\n        indices[index2 + 5] = index3 + 3;\n    }\n    return indices;\n}\n","import { Mesh } from \"./glazeGL/core/Mesh\";\nimport { Program } from \"./glazeGL/core/Program\";\nimport { Renderer } from \"./glazeGL/core/Renderer\";\nimport { Texture } from \"./glazeGL/core/Texture\";\nimport { Camera } from \"./glazeGL/displaylist/Camera\";\nimport { Sprite } from \"./glazeGL/displaylist/Sprite\";\nimport { SpriteTexture } from \"./glazeGL/displaylist/SpriteTexture\";\nimport { Stage } from \"./glazeGL/displaylist/Stage\";\nimport { Quad } from \"./glazeGL/geom/Quad\";\nimport { Rectangle } from \"./glazeGL/geom/Rectangle\";\nimport { SpriteRenderer } from \"./glazeGL/renderers/sprite/SpriteRenderer\";\nimport image from \"./assets/texture.jpg\";\n\n// const vertex = `\n//                 attribute vec2 uv;\n//                 attribute vec2 position;\n//                 varying vec2 vUv;\n//                 void main() {\n//                     vUv = uv;\n//                     gl_Position = vec4(position, 0.0, 1.0);\n//                 }\n//             `;\n\n//             const fragment = `\n//                 precision highp float;\n//                 uniform sampler2D uSampler;\n//                 varying vec2 vUv;\n//                 void main() {\n//                     vec3 tex = texture2D(uSampler, vUv).rgb;\n//                     //gl_FragColor.rgba = vec4(1.0,0.0,0.0,1.0);\n//                     gl_FragColor.rgba = vec4(tex,1.0);\n//                 }\n//             `;\n\n//             const renderer = new Renderer({ width: 400, height: 400 });\n\n//             document.body.appendChild(renderer.canvas);\n\n//             const texture = new Texture(renderer);\n\n//             const img = new Image();\n            \n//             img.src = image;//\"texture.jpg\";\n\n//             const uniforms = {\n//                 uSampler: { value: texture },\n//             };\n\n//             const program = new Program(renderer, { vertex, fragment, uniforms });\n\n//             const geometry = new Quad(renderer);\n\n//             const renderable = new Mesh(renderer, { geometry, program, mode: WebGLRenderingContext.TRIANGLE_STRIP });\n\n//             img.onload = () => {\n//                 texture.image = img;\n//                 texture.update();\n//                 renderer.render({ renderable });\n//             };\n\n\n// const renderer = new Renderer({ width: 400, height: 400 });\n// // renderer.setBlendFunc(WebGLRenderingContext.SRC_ALPHA, WebGLRenderingContext.ONE_MINUS_SRC_ALPHA);\n// document.body.appendChild(renderer.canvas);\n\n// const texture = new Texture(renderer, {\n//     image: new Uint8Array([191, 25, 54, 255, 96, 18, 54, 255, 96, 18, 54, 255, 37, 13, 53, 255]),\n//     width: 2,\n//     height: 2,\n//     magFilter: 0x2600, //gl.NEAREST,\n// });\n// const camera = new Camera();\n// camera.resize(400, 400);\n// const stage = new Stage();\n// const spriteTexture = new SpriteTexture(texture, new Rectangle(0, 0, 2, 2));\n\n// const sprite = new Sprite();\n// sprite.texture = spriteTexture;\n// sprite.position.x = 200;\n// sprite.position.y = 200;\n// sprite.scale.x = 50;\n// sprite.scale.y = 50;\n// stage.addChild(sprite);\n\n// const sprite2 = new Sprite();\n// sprite2.texture = spriteTexture;\n// sprite2.position.x = 2;\n// sprite2.position.y = 2;\n// sprite2.scale.x = 1;\n// sprite2.scale.y = 1;\n// sprite.addChild(sprite2);\n\n// const displayList = new SpriteRenderer(renderer);\n// displayList.addStage(stage);\n// displayList.resize(400, 400);\n\n// camera.focus(0, 0);\n\n// const draw = () => {\n//     // console.log(sprite);\n//     // debugger;\n//     renderer.render({ renderable: displayList });\n//     sprite.rotation += 0.01;\n//     sprite2.rotation += 0.01;\n//     window.requestAnimationFrame(draw);\n// }\n\n// window.requestAnimationFrame(draw);\n\nconst renderer = new Renderer({ width: 1000, height: 1000 });\n\n            document.body.appendChild(renderer.canvas);\n\n            const texture = new Texture(renderer, {\n                image: new Uint8Array([191, 25, 54, 255, 96, 18, 54, 255, 96, 18, 54, 255, 37, 13, 53, 255]),\n                width: 2,\n                height: 2,\n                magFilter: 0x2600, //gl.NEAREST,\n            });\n            const camera = new Camera();\n            camera.resize(1000, 1000);\n            const stage = new Stage();\n            const spriteTexture = new SpriteTexture(texture, new Rectangle(0, 0, 2, 2));\n\n            const count = 100;\n\n            const sprites = [];\n            for (var x = 0; x < count; x++) {\n                for (var y = 0; y < count; y++) {\n                    const sprite = new Sprite();\n                    sprite.texture = spriteTexture;\n                    sprite.position.x = 5 + (x * 10);\n                    sprite.position.y = 5 + (y * 10);\n                    sprite.scale.x = 4;\n                    sprite.scale.y = 4;\n                    stage.addChild(sprite);\n                    sprites.push(sprite);\n                }\n            }\n\n            const displayList = new SpriteRenderer(renderer);\n            displayList.addStage(stage);\n            displayList.resize(1000, 1000);\n\n            camera.focus(0, 0);\n            let time = 0;\n            const draw = () => {\n                renderer.render({ renderable: displayList });\n                for (const sprite of sprites) {\n                    sprite.rotation += 0.1;\n                    // sprite.scale.x = sprite.scale.y = 5 + 20*Math.sin(time);\n                }\n                time+=0.001;\n                window.requestAnimationFrame(draw);\n            };\n\n            window.requestAnimationFrame(draw);","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}